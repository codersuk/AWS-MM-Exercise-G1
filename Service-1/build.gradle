import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-LATEST'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
    // this dependencies allow to run the tests locally with gradle
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.1")
}

test {
//tasks.withType(Test) {
    // enable TestNG support (default is JUnit)
    //useTestNG()           // <-- this guy silently kill the test execution
    // enable JUnit Platform (a.k.a. JUnit 5) support
    //useJUnitPlatform()    // <-- this guy mekes "0" tests found
    

    // https://stackoverflow.com/questions/3963708/gradle-how-to-display-test-results-in-the-console-in-real-time/36130467#36130467
    afterSuite { desc, result ->
    if (!desc.parent)
        println("${result.resultType} " +
            "(${result.testCount} tests, " +
            "${result.successfulTestCount} successes, " +
            "${result.failedTestCount} failures, " +
            "${result.skippedTestCount} skipped)")
    }	
}

// create a single Jar with all dependencies
task createJar(type: Jar) {

    //println("rootDir: $rootDir")
	//println("buildDir: $buildDir")
	
	manifest {
		attributes 'Implementation-Title': 'Gradle Jar File for Service-1',  
		'Implementation-Version': version,
		'Main-Class': 'com.example.demo1.ServiceOneApplication'
	}
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar	
	destinationDir = file("$rootDir/publish")	
	doLast { println("jar.destinationDir = " + destinationDir) }
}

task alex_1 {
	doFirst { println("alex 1 task start" )	}
	doLast { println("alex 1 task end" ) }
}
